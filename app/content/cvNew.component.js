System.register(["angular2/core", "./cv/cv-service"], function(exports_1, context_1) {
    "use strict";
    var __moduleName = context_1 && context_1.id;
    var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
        var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
        if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
        else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
        return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    var __metadata = (this && this.__metadata) || function (k, v) {
        if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
    };
    var core_1, cv_service_1;
    var CvNewComponent;
    return {
        setters:[
            function (core_1_1) {
                core_1 = core_1_1;
            },
            function (cv_service_1_1) {
                cv_service_1 = cv_service_1_1;
            }],
        execute: function() {
            CvNewComponent = (function () {
                //Inject CvService, add to a private variable in a constructor. After we define providers
                function CvNewComponent(_cvService) {
                    this._cvService = _cvService;
                }
                CvNewComponent.prototype.getCvInfo = function () {
                    var _this = this;
                    // Promise handler
                    this._cvService.getCVInfo().then(function (data) { return _this.cvInfo = data; });
                };
                // Set 'showMore' based on id of current element clicked, and show curr content.
                CvNewComponent.prototype.showMoreBtn = function (i) {
                    this.showMore === i ? this.showMore = null : this.showMore = i;
                };
                CvNewComponent.prototype.ngOnInit = function () {
                    this.getCvInfo();
                };
                CvNewComponent = __decorate([
                    core_1.Component({
                        selector: 'cvNew',
                        template: "        \n         <!-- Start loop CV-INFO -->\n        <div class=\"cv-content-box skew\" *ngFor=\"#cvtype of cvInfo\">\n            <div class=\"skew-justify\">\n                <div class=\"container\">\n                    <div class=\"row\">\n                        <!--col-1 [title] -->\n                        <div class=\"col-md-1\">\n                            <div class=\"rotate left-breadcrumb lb-small\">\n                                    <h2>{{cvtype.type}}</h2>\n                            </div>\n                        </div>\n                        <!--/col-1 [title] -->\n                        \n                        \n                        <!--col-sm-12 col-md-7-->\n                        <div class=\"col-sm-12 col-md-8 col-md-offset-2 col-lg-offset-1\">\n                            <!-- CV-Content loop -->\n                            <template ngFor #content [ngForOf]=\"cvtype.typeCont\" #in=\"index\">\n                            <div class=\"row cv-row\">\n                                <div class=\"col-xs-9\">\n                                    <h3 class=\"black\">\n                                        <a *ngIf=\"content.href\" href=\"{{content.href}}\" target=\"_blank\">{{content.title}}</a>\n                                        <span *ngIf=\"!content.href\">{{content.title}}</span>\n                                    </h3>\n                                </div>\n                                <div class=\"col-xs-3\"><h3 class=\"pull-right\">{{content.year}}</h3></div>\n                                <hr class=\"dotted\">\n                                <div class=\"col-sm-8\"><h4>{{content.subtitle}}</h4></div>\n                                <!-- /.col [Infotext] -->\n                                \n                                <div class=\"col-md-4\" *ngIf=\"content.info\">\n                                    <div class=\"row\">\n                                        <button class=\"btn btn-mm\" (click)=\"showMoreBtn(content.id)\">\n                                            <div *ngIf=\"showMore !== content.id\">Se mer <span class=\"glyphicon glyphicon-chevron-down\" aria-hidden=\"true\"></span></div>\n                                            <div *ngIf=\"showMore === content.id\">Lukk <span class=\"glyphicon glyphicon-chevron-up\" aria-hidden=\"true\"></span></div>\n                                        </button>\n                                    </div>\n                                </div>\n                                <!-- /.col-4 [showBtns] -->\n                                \n                                <!-- Content.info - less then 2 items -->\n                                <div class=\"col-md-12\" *ngIf=\"showMore === content.id && content.info && content.info.length < 2\" >\n                                    <p *ngFor=\"#moreinfo of content.info\">{{moreinfo.infotext}}</p>\n                                </div>\n                                \n                                <!-- Content.info - more then 2 items -->\n                                <div class=\"col-md-12\" *ngIf=\"showMore === content.id && content.info && content.info.length > 2\" >\n                                    <div class=\"row\">\n                                        <div class=\"col-md-6\">\n                                            <ul>\n                                                <template ngFor #moreinfo [ngForOf]=\"content.info\" #i=\"index\">\n                                                    <li *ngIf=\"i < 9\">{{moreinfo.infotext}}</li> \n                                                </template>\n                                            </ul>\n                                        </div>\n                                        <!-- /.col-6 -->\n                                        <div class=\"col-md-6\">\n                                            <ul>\n                                                <template ngFor #moreinfo [ngForOf]=\"content.info\" #i=\"index\">\n                                                    <li *ngIf=\"i > 8\">{{moreinfo.infotext}}</li> \n                                                </template>\n                                            </ul>\n                                        </div>\n                                        <!-- /.col-6 -->\n                                    </div>\n                                    <!-- /.row -->\n                                </div>\n                                <!-- /.col-12 [Content.info] -->\n                                \n                            </div>\n                            <!-- /row -->\n                            </template>\n                            <!-- CV-Content loop -->\n                        </div>\n                        <!--col-sm-12 col-md-7-->\n                    </div>\n                    <!--/row-->\n                </div>\n                <!-- /container -->\n            </div>\n            <!-- /skew-justify -->\n        </div>\n        <!-- END loop CV-INFO -->\n    ",
                        providers: [cv_service_1.CvService]
                    }), 
                    __metadata('design:paramtypes', [cv_service_1.CvService])
                ], CvNewComponent);
                return CvNewComponent;
            }());
            exports_1("CvNewComponent", CvNewComponent);
        }
    }
});

//# sourceMappingURL=data:application/json;base64,
